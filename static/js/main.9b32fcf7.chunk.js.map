{"version":3,"sources":["redux/api.js","redux/auth/constants.js","assests/images/deliver.png","assests/images/logo.jpg","Layout/TopHeader.js","Layout/SideBar.js","DefaultLayout.js","redux/post/action/index.js","redux/post/constants.js","redux/auth/reducer/index.js","redux/post/reducer/index.js","redux/store.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["ossoApi","axios","create","baseURL","USER_LOGIN","USER_REGISTER","module","exports","connect","state","isLoggedIn","auth","props","className","class","Input","type","name","placeholder","value","to","size","src","require","Provider","color","SideBar","sideNav","categories","map","item","index","childNav","children","ch","subchildNav","subCh","pathname","split","join","_id","alt","post","getCategory","dispatch","a","payload","get","data","console","log","useEffect","initialstate","error","loading","token","userList","user","loginP1","userReducer","subCategories","order","postReducer","id","isCreated","orders","appReducers","combineReducers","authReducer","middleware","logger","thunk","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","action","undefined","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","getPersistor","getStore","SignIn","React","lazy","SignUp","ForgotPassword","Profile","Home","CategoryPage","routes","path","exact","component","App","myPersistor","fallback","route","idx","render","from","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9b32fcf7.chunk.js","sourcesContent":["import axios from 'axios'\n\n// export const baseUrl='http://3.23.95.44:5001'\nexport const baseUrl = 'https://osso-backend.herokuapp.com/api/'\n// export const baseUrl = 'http://192.168.1.5:3001/api/'\nexport const ossoApi=axios.create({\n    baseURL:baseUrl\n})","// user constant\nexport const USER_LOGIN ='USER_LOGIN'\nexport const USER_REGISTER='USER_REGISTER'\n// Post constant\n\n","module.exports = __webpack_public_path__ + \"static/media/deliver.3ee32142.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.365a776e.jpg\";","import React, {useState} from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { IconContext } from \"react-icons\";\nimport { FaUserCircle, FaPowerOff } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport {connect} from 'react-redux'\nfunction TopHeader(props) {\n    const { isLoggedIn}=props\n    // const [isLogedin , setisLogedin] = useState(false);\n    return (\n            <div className=\"logo-container\">\n                <div className=\"toggle-btn\">\n                    <span class=\"stick1\"></span> \n                    <span class=\"stick2\"></span>\n                    <span class=\"stick3\"></span>\n                </div>\n                <div className=\"searchBox\">\n                    <div class=\"search-outer\">\n                        <Input type=\"text\" name=\"\" className=\"search-box\" placeholder=\"Search..\" /><Input type=\"submit\" className=\"search\" value=\"\" />\n                    </div>\n\n                    <div className=\"locationDropDown\">\n                        <Input type=\"select\">\n                            <option>Panchkula</option>\n                            <option>Chandigarh</option>\n                            <option>Delhi</option>\n                            <option>Kalka</option>\n                            <option>Mohali</option>\n                        </Input>\n                    </div>\n                </div>\n\n                <div className=\"add-post\">\n                    <Link to=\"/addPost\" size=\"sm\" className=\"post-add\">Post Ads</Link>{' '}\n                </div>\n                <div className=\"login-section\">\n                {isLoggedIn ? \n                <>\n                    <Link to='/profile'>\n                        <img className=\"userImage\" src={require('../../src/assests/images/deliver.png')} />\n                        <span>John Appleased</span>\n                    </Link>\n                    <Link to='/logout'>\n                        <IconContext.Provider value={{ color: \"grey\", className: \"userIcon\", size: \"15\" }}>\n                                <span><FaPowerOff /></span>\n                        </IconContext.Provider>\n                        <span>Logout</span>\n                    </Link>\n                    </>\n                :\n                    <Link to='/signin'>\n                        <IconContext.Provider value={{ color: \"grey\", className: \"userIcon\", size: \"25\" }}>\n                            <span><FaUserCircle /></span>\n                        </IconContext.Provider>\n                        <span>Sign In | Register</span>\n                    </Link>\n                }\n                </div>\n            </div>\n    );\n}\nconst mapStateToProps=(state)=>{\n    return{\n        isLoggedIn: state.auth.isLoggedIn,\n    }\n}\nexport default connect(mapStateToProps)(TopHeader);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FaChevronRight } from 'react-icons/fa';\nimport { IconContext } from \"react-icons\";\n\nfunction SideBar(props) {\n    // console.log(\"Categories\", props.categories);\n\n    const data = props.categories || [] ;\n    // const style = {\n    //     transform : 'scaleY(0)',\n    //     hover\n    // }\n    // const data = [\n    //     {\n    //         name: 'Home',\n    //         children: [\n    //             {\n    //                 name: 'Home',\n    //                 path: '/home',\n    //                 subChild : [\n    //                     {\n    //                         name: 'Home',\n    //                         path: '/home',\n    //                     },\n    //                 ]\n    //             },\n    //             {\n    //                 name: 'Home',\n    //                 path: '/home',\n    //             },\n    //         ]            \n    //     },\n    //     {\n    //         name: 'Sign In',\n    //         path: '/signin',\n    //     },\n    // ]\n\n     const sideNav = data.map((item, index) => {\n        const childNav = item.children && item.children.map((ch, index) => {\n            \n            const subchildNav = ch.children && ch.children.map((subCh, index) => (\n                <li>\n                    <Link to={{ pathname: \"/category/\"+subCh.name.split(\" \").join(\"-\"), state: { _id: subCh._id } }}>{subCh.name}</Link>\n                </li>\n            ))\n            return(\n                <li>\n                    <Link to={ch.children ? \"#\" : { pathname: \"/category/\"+ch.name.split(\" \").join(\"-\"), state: { _id: ch._id } }}>{ch.name} \n                        {ch.children &&\n                            <IconContext.Provider value={{ color: \"grey\", className: \"arrowBtn\", size: \"14\" }}>\n                                <span><FaChevronRight /></span>\n                            </IconContext.Provider>\n                        }\n                    </Link>\n                        {ch.children &&\n                            <div className=\"sub-drop-menu\">\n                                <ul>\n                                    {subchildNav}\n                                </ul>\n                            </div>\n                        }\n                </li>\n        )});\n\n        return(\n            <li>\n                <Link to={item.children ? '#' : { pathname: \"/category/\"+item.name.split(\" \").join(\"-\"), state: { _id: item._id }}}>{item.name} \n                    {item.children &&\n                   <IconContext.Provider value={{ color: \"grey\", className: \"arrowBtn\", size: \"14\" }}>\n                    <span><FaChevronRight /></span>\n                    </IconContext.Provider>\n     }\n                </Link>\n\n                {item.children &&\n\n                    <div className=\"drop-menu\">\n                        <ul>\n                            {childNav}\n                        </ul>\n                    </div>\n                }\n                \n            </li>\n        )\n     })\n    return (\n            <div className=\"side-bar-outer\">\n                <div className=\"sidebar\">\n                    <div class=\"sidebar-header\">\n                        <Link to=\"/home\" class=\"logo-text\">\n                            <div class=\"logo-img\">\n                                <img src={require('../assests/images/logo.jpg')} alt=\"\" />\n                            </div>\n                        </Link>    \n                    </div>\n                    <ul>\n                    {sideNav}\n                    </ul>\n                </div>\n\n            </div>\n    );\n}\nexport default SideBar;\n","import React, {useState , useEffect} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport {connect} from 'react-redux';\nimport { getCategory} from '../src/redux/post/action';\n\nimport TopHeader from './Layout/TopHeader';\nimport SideBar from './Layout/SideBar';\n\nfunction DefaultLayout(props) {\n    useEffect(()=>{\n        props.getCategory()\n    }, [])\n\n    return (\n        <div className=\"deafault-layout\">\n            <TopHeader />\n            <SideBar categories={props.categories} />\n        </div>\n    );\n}\nconst mapStateToProps = (state) => (\n    { categories : state.post.categories}\n)\nexport default connect(mapStateToProps, {getCategory} ) (DefaultLayout);\n","/* eslint-disable no-console */\n/* eslint-disable import/prefer-default-export */\n// import * as firebase from 'firebase/app';\n// import 'firebase/auth';\n// import 'firebase/firestore';\n// import {AsyncStorage} from 'react-native';\n// import {fn} from 'moment';\nimport {ossoApi} from '../../api';\n\nimport {\n  POST_LOADING,\n  CATEGORY_LIST,\n  SUBCATEGORY_LIST,\n  POST_ERROR,\n  POST_LIST,\n  CREATE_POST,\n  CREATE_ORDER,\n  FILTER_ORDER,\n  ISCREATED_RESET,\n} from '../constants';\n\nexport const getCategory = () => async dispatch => {\n  dispatch({type: POST_LOADING, payload: null});\n  try {\n    const {data} = await ossoApi.get('category');\n    console.log('data==>', data);\n    dispatch({type: CATEGORY_LIST, payload: data.data});\n    // if (data.token) {\n    //     dispatch({ type: USER_LOGIN, payload: data.token });\n    // }\n  } catch (error) {\n    console.log('login error', error);\n    dispatch({type: POST_ERROR, payload: null});\n  }\n};\nexport const getSubCategory = id => async dispatch => {\n  console.log('inside subcategory api', id);\n  dispatch({type: POST_LOADING, payload: null});\n  try {\n    const {data} = await ossoApi.get(`category/${id}/subcategory`);\n    console.log('data==>', data);\n    dispatch({type: SUBCATEGORY_LIST, payload: {data: data.data, id}});\n    // if (data.token) {\n    //     dispatch({ type: USER_LOGIN, payload: data.token });\n    // }\n  } catch (error) {\n    console.log('login error', error);\n    dispatch({type: POST_ERROR, payload: null});\n  }\n};\nexport const getPost = id => async dispatch => {\n  console.log('id', id);\n  dispatch({type: POST_LOADING, payload: null});\n  try {\n    const {data} = await ossoApi.get(`category/${id}/posts`);\n    console.log('data==>', data);\n    dispatch({type: POST_LIST, payload: data.data});\n    // if (data.token) {\n    //     dispatch({ type: USER_LOGIN, payload: data.token });\n    // }\n  } catch (error) {\n    console.log('login error', error);\n    dispatch({type: POST_ERROR, payload: null});\n  }\n};\nexport const createPost = (dataInput, imageUrl) => async dispatch => {\n  console.log('id', dataInput);\n  dispatch({type: POST_LOADING, payload: null});\n  try {\n    const {\n      address,\n      brand,\n      description,\n      price,\n      seller,\n      title,\n      usage,\n    } = dataInput;\n    // let data = JSON.stringify(dataInput);\n    console.log('imageData', imageUrl);\n    var bodyFormData = new FormData();\n    bodyFormData.append(\n      'imageUrl',\n      'posts/2020-05-28T11:30:57.098Zishan-seefromthesky-3Slc034bmHQ-unsplash.jpg',\n    );\n    bodyFormData.append('title', title);\n    bodyFormData.append('discription', description);\n    bodyFormData.append('price', price);\n    bodyFormData.append('address', address);\n    bodyFormData.append('usage', usage);\n    bodyFormData.append('brand', brand);\n    bodyFormData.append('sellerType', seller);\n    bodyFormData.append('categories', [\n      {key: '3 star hotels', value: '5ecfa207709a81002445fbaf'},\n    ]);\n    bodyFormData.append('specifications', [\n      {key: 'furnishing', value: 'fully'},\n      {key: 'wifi', value: 'available'},\n    ]);\n    console.log('form data', bodyFormData);\n    const response = await ossoApi.post('post', bodyFormData, {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n    });\n    console.log('data==>', response);\n    dispatch({type: CREATE_POST, payload: response.data.data});\n    // if (data.token) {\n    //     dispatch({ type: USER_LOGIN, payload: data.token });\n    // }\n  } catch (error) {\n    console.log('login error', error);\n    dispatch({type: POST_ERROR, payload: null});\n  }\n};\nexport const createOrder = dataInput => async dispatch => {\n  console.log('id--', dataInput);\n  dispatch({type: POST_LOADING, payload: null});\n  try {\n    let data = JSON.stringify(dataInput);\n    const response = await ossoApi.post('order', data, {\n      headers: {'Content-Type': 'application/json'},\n    });\n    console.log('data==>>>>==', response);\n    dispatch({\n      type: CREATE_ORDER,\n      payload: {address: response.data.data, keyId: response.data.keyId},\n    });\n    // if (data.token) {\n    //     dispatch({ type: USER_LOGIN, payload: data.token });\n    // }\n  } catch (error) {\n    console.log('login error', error);\n    dispatch({type: POST_ERROR, payload: null});\n  }\n};\nexport const filterOrder = dataInput => async dispatch => {\n  console.log('order by--', dataInput);\n  dispatch({type: POST_LOADING, payload: null});\n  try {\n    let data = JSON.stringify(dataInput);\n    const response = await ossoApi.post('order/filter', data, {\n      headers: {'Content-Type': 'application/json'},\n    });\n    console.log('total order', response);\n    dispatch({\n      type: FILTER_ORDER,\n      payload: response.data.data,\n    });\n    // if (data.token) {\n    //     dispatch({ type: USER_LOGIN, payload: data.token });\n    // }\n  } catch (error) {\n    console.log('filter order error', error);\n    dispatch({type: POST_ERROR, payload: null});\n  }\n};\nexport const resetIsCreated = () => ({\n  type: ISCREATED_RESET,\n  payload: null,\n});\n","// Post constant\n\nexport const CATEGORY_LIST = 'CATEGORY_LIST';\nexport const SUBCATEGORY_LIST = 'SUBCATEGORY_LIST';\nexport const POST_LOADING = 'POST_LOADING';\nexport const POST_ERROR = 'POST_ERROR';\nexport const POST_ERROR_RESET = 'POST_ERROR_RESET';\nexport const POST_LIST = 'POST_LIST';\nexport const CREATE_POST = 'CREATE_POST ';\nexport const CREATE_ORDER = 'CREATE_ORDER ';\nexport const FILTER_ORDER = 'FILTER_ORDER';\nexport const ISCREATED_RESET = 'ISCREATED_RESET ';\n","import {\n    USER_LOGIN,\n    USER_REGISTER,\n} from '../constants';\n\n\nconst initialstate = {\n    error: false,\n    loading: false,\n    isLoggedIn: false,\n    token: null,\n    userList: [],\n    user: null,\n    loginP1: false,\n};\n\n\nconst userReducer = (state = initialstate, { type, payload }) => {\n    switch (type) {\n        case USER_LOGIN: {\n            const loading = false;\n            const error = false;\n            const isLoggedIn=true;\n            const {user,token} = payload;\n            return {\n                ...state, loading, error, user, token, isLoggedIn\n            };\n        }\n        case USER_REGISTER: {\n            const loading = false;\n            const error = false;\n            const isLoggedIn=true;\n            const {user,token } = payload;\n            return {\n                ...state, loading, error, user, token, isLoggedIn\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default userReducer;","import {\n    POST_LOADING,\n    CATEGORY_LIST,\n    SUBCATEGORY_LIST,\n    POST_ERROR,\n    POST_ERROR_RESET,\n    POST_LIST,\n    CREATE_POST,\n    CREATE_ORDER,\n    FILTER_ORDER,\n    ISCREATED_RESET,\n} from '../constants';\n\nconst initialstate = {\n    error: false,\n    loading: false,\n    categories: [],\n    subCategories: {},\n    post: [],\n    order: [],\n};\n\nconst postReducer = (state = initialstate, { type, payload }) => {\n    switch (type) {\n        case POST_LOADING: {\n            const loading = true;\n            const error = false;\n            return {\n                ...state,\n                loading,\n                error,\n            };\n        }\n\n        case POST_ERROR: {\n            const loading = false;\n            const error = true;\n            return {\n                ...state,\n                loading,\n                error,\n            };\n        }\n        case POST_ERROR_RESET: {\n            const error = false;\n            return {\n                ...state,\n                error,\n            };\n        }\n        case CATEGORY_LIST: {\n            const loading = false;\n            const error = false;\n            const categories = payload;\n            return {\n                ...state,\n                loading,\n                error,\n                categories,\n            };\n        }\n        case SUBCATEGORY_LIST: {\n            const loading = false;\n            const error = false;\n            const { id, data } = payload;\n            const subCategories = { [id]: data };\n            return {\n                ...state,\n                loading,\n                error,\n                subCategories,\n            };\n        }\n        case POST_LIST: {\n            const loading = false;\n            const error = false;\n            const post = payload;\n            return {\n                ...state,\n                loading,\n                error,\n                post,\n            };\n        }\n        case CREATE_POST: {\n            const loading = false;\n            const error = false;\n            const post = payload;\n            return {\n                ...state,\n                loading,\n                error,\n                post,\n            };\n        }\n        case CREATE_ORDER: {\n            const loading = false;\n            const error = false;\n            const order = [...state.order, payload];\n            const isCreated = true;\n            return {\n                ...state,\n                loading,\n                error,\n                order,\n                isCreated,\n            };\n        }\n        case FILTER_ORDER: {\n            const loading = false;\n            const error = false;\n            const orders = payload;\n            return {\n                ...state,\n                loading,\n                error,\n                orders,\n            };\n        }\n        case ISCREATED_RESET: {\n            const loading = false;\n            const error = false;\n            const isCreated = false;\n            return {\n                ...state,\n                loading,\n                error,\n                isCreated,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default postReducer;\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport logger from 'redux-logger';\n// persit import\nimport {persistStore, persistReducer} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\n// import {AsyncStorage} from 'react-native';\n\n// import { persistStore, persistReducer } from 'redux-persist';\nimport authReducer from './auth/reducer';\nimport postReducer from './post/reducer';\n\nconst appReducers = combineReducers({\n  auth: authReducer,\n  post: postReducer,\n});\n\nconst rootReducers = (state, action) =>\n  appReducers(action.type === 'RESET' ? undefined : state, action);\nconst middleware = [logger, thunk];\n\nconst persistConfig = {\n  key: 'primary',\n  storage: storage,\n  // Whitelist (Save Specific Reducers)\n  whitelist: ['auth'],\n  // Blacklist (Don't Save Specific Reducers)\n  // blacklist: [\n  //   'counterReducer',\n  // ],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducers);\n\nconst store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(...middleware)),\n);\n\nconst persistor = persistStore(store);\nconst getPersistor = () => persistor;\nconst getStore = () => store;\nconst getState = () => store.getState();\n\nexport {getStore, getState, getPersistor};\nexport default {getStore, getState, getPersistor};\n","import React from 'react';\n\nconst SignIn = React.lazy(() => import('./container/auth/SignIn'));\nconst SignUp = React.lazy(() => import('./container/auth/SingUp'));\nconst ForgotPassword = React.lazy(() => import('./container/auth/ForgotPassword'));\nconst Profile = React.lazy(() => import('./container/Profile'));\nconst Home = React.lazy(() => import('./screens/Home'));\nconst CategoryPage = React.lazy(() => import('./screens/category/CategoryPage'));\nconst CategoryInner = React.lazy(() => import('./screens/category/CategoryInner'));\nconst AddPost = React.lazy(() => import('./screens/category/AddPost'));\nconst Logout = React.lazy(() => import('./screens/auth/Logout'));\nconst routes = [\n    { path: '/', exact: true, name: 'Home', component: Home },\n    { path: '/home', name: 'Home', component: Home },\n    { path: '/signin', name: 'SignIn', component: SignIn },\n    { path: '/signup', name: 'SignUp', component: SignUp },\n    { path: '/forgot', name: 'ForgotPassword', component: ForgotPassword },\n    { path: '/profile', name: 'Profile', component: Profile },\n    { path: '/category/:categoryName/:postName', name: 'CategoryDetail', component: CategoryInner },\n    { path: '/category/:categoryName', name: 'Category', component: CategoryPage },\n    { path: '/addPost', name: 'AddPost', component: AddPost },\n    { path: '/logout', name: 'Logout', component: Logout },\n]\n\nexport default routes;","import React, { Suspense, useState, useEffect } from 'react';\nimport { Redirect, Route, Switch, BrowserRouter } from 'react-router-dom';\n// import * as router from 'react-router-dom';\nimport DefaultLayout from './DefaultLayout';\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { getStore, getPersistor } from '../src/redux/store';\n\nimport routes from './routes';\n\nfunction App(props) {\n  console.log(\"Routes ==> \", routes);\n  \n  const store = getStore();\n  const myPersistor = getPersistor();\n\n  const loading = () => (\n    <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n  );\n\n\n\n  return (\n    \n      <Provider store={store}>\n        <PersistGate persistor={myPersistor} loading={null}>\n          \n          <div className=\"osso-outer\">\n          <BrowserRouter>\n            <DefaultLayout />\n            <div className=\"main-container\">\n              <Suspense fallback={loading}>\n                <Switch>\n                  {routes.map((route, idx) => {\n                    return route.component ? (\n                      <Route\n                        key={idx}\n                        path={route.path}\n                        exact={route.exact}\n                        name={route.name}\n                        render={props => (\n                          <route.component {...props} />\n                        )} />\n                    ) : (null);\n                  })}\n                  <Redirect from=\"/\" to=\"/home\" />\n                </Switch>\n              </Suspense>\n            </div> \n          </BrowserRouter>\n          </div>   \n        \n        </PersistGate>\n      </Provider>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}